name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - dev # Run the pipeline only on pushes to the dev branch
  pull_request:
    branches:
      - dev # Run the pipeline only on pull requests targeting dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Specify the Node.js version you want to use

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Set Cloudinary environment variables from GitHub Secrets before running tests
      - name: Set Cloudinary environment variables
        run: |
          echo "CLOUD_NAME=${{ secrets.CLOUD_NAME }}" >> $GITHUB_ENV
          echo "CLOUD_API_KEY=${{ secrets.CLOUD_API_KEY }}" >> $GITHUB_ENV
          echo "CLOUD_API_SECRET=${{ secrets.CLOUD_API_SECRET }}" >> $GITHUB_ENV

      # Compile TypeScript
      - name: Build TypeScript
        run: |
          npm run build

      # Run tests
      - name: Run tests
        run: |
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success() # Only deploy if the build was successful

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Ensure same Node.js version as build

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Deploy to Vercel (for dev branch)
      - name: Deploy to Vercel
        run: |
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }}  # Add Vercel token as GitHub secret
